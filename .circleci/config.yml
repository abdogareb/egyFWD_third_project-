version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  browser-tools: circleci/browser-tools@1.2.3
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: cimg/node:14.15-browsers
    steps:
      # install node and checkout code
      - node/install:
          node-version: "14.15"
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
            # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Front-End Test
          command: |
            npm run frontend:test
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      # TODO: Build the backend API
      - run:
          name: API Build
          command: |
            npm run api:build

  build-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: cimg/node:14.15-browsers
    steps:
      # install node and checkout code
      - node/install:
          node-version: "14.15"
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Front-End Deploy
          command: |
            npm run frontend:deploy
      - run:
          name: API Deploy
          command: |
            npm run api:deploy
workflows:
  udagram:
    jobs:
      - build:
        filters:
        branches:
          only: # only branches matching the below regex filters will run
            - main
            - master
      - deploy:
          requires:
            - build
